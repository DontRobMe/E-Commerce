// <auto-generated />
using System;
using E_Commerce.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240516093711_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("E_Commerce.Business.Models.Achats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Facture")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Produit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("prix")
                        .HasColumnType("int");

                    b.Property<int>("quantité")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Achats");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Birth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Wallet")
                        .HasColumnType("int");

                    b.Property<string>("birth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ClientsId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientsId");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Site", b =>
                {
                    b.Property<int>("NbMembers")
                        .HasColumnType("int");

                    b.Property<int>("Sells")
                        .HasColumnType("int");

                    b.Property<int>("Sells7Days")
                        .HasColumnType("int");

                    b.Property<int>("SiteMoney")
                        .HasColumnType("int");

                    b.Property<int>("SiteMoney7Days")
                        .HasColumnType("int");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Produit", b =>
                {
                    b.HasOne("E_Commerce.Business.Models.Clients", null)
                        .WithMany("WishList")
                        .HasForeignKey("ClientsId");
                });

            modelBuilder.Entity("E_Commerce.Business.Models.Clients", b =>
                {
                    b.Navigation("WishList");
                });
#pragma warning restore 612, 618
        }
    }
}
